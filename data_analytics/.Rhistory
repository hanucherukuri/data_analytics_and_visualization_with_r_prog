colour = deprivation))+
geom_point(size = 3)+
ylim(cbind(5,35))+
stat_smooth(method = lm, se = F, col = "red")+
labs(title = "visualising spend vs derpivation",
x = "deprivation",
y = "spend")+
theme(legend.position = covid,
text = element_text(size=16), plot.title = element_text(hjust = 0.5))
plot1 <- my_data %>%
ggplot(aes(deprivation,spend,
colour = deprivation))+
geom_point(size = 3)+
ylim(cbind(5,35))+
stat_smooth(method = lm, se = F, col = "red")+
labs(title = "visualising spend vs derpivation",
x = "deprivation",
y = "spend")+
theme(legend.position = "covid",
text = element_text(size=16), plot.title = element_text(hjust = 0.5))
plot1 <- my_data %>%
ggplot(aes(deprivation,spend,
colour = deprivation))+
geom_point(size = 3)+
ylim(cbind(5,35))+
stat_smooth(method = lm, se = F, col = "red")+
labs(title = "visualising spend vs derpivation",
x = "deprivation",
y = "spend")+
theme(legend.position = "none",
text = element_text(size=16), plot.title = element_text(hjust = 0.5))
my_data %>%
ggplot(aes(deprivation,spend,
colour = deprivation))+
geom_point(size = 3)+
ylim(cbind(5,35))+
stat_smooth(method = lm, se = F, col = "red")+
labs(title = "visualising spend vs derpivation")+
scale_x_continuous(name = "deprivation",
limits = c(10, 60),
breaks = c(seq(10,60,5)))+
scale_y_continuous(name = "spend",
limits = c(5,35),
breaks = c(seq(5,40,5)))+
theme(text = element_text(size=16), plot.title = element_text(hjust = 0.5))
ggarrange(plot1, plot2,
labels = c("A", "B"),
ncol = 2, nrow = 1,
heights = c(1,1))
plot2 <- my_data %>%
ggplot(aes(covid, spend,
colour = spend))+
geom_point()+
xlim(1,2)+
ylim(5,30)+
stat_smooth(method = lm, se = F, col = "red")+
labs(title = "visualising spend vs covid")+
scale_x_discrete(names = "covid",
limitedLabels = (1,2))+
theme(text = element_text(size=16), plot.title = element_text(hjust = 0.5))
plot2
plot2 <- my_data %>%
ggplot(aes(covid, spend,
colour = spend))+
geom_point()+
stat_smooth(method = lm, se = F, col = "red")+
labs(title = "visualising spend vs covid")+
scale_x_discrete(names = "covid",
limitedLabels = (1,2))+
theme(text = element_text(size=16), plot.title = element_text(hjust = 0.5))
plot2
plot2 <- my_data %>%
ggplot(aes(covid, spend,
colour = spend))+
geom_point()+
stat_smooth(method = lm, se = F, col = "red")+
labs(title = "visualising spend vs covid")+
scale_x_discrete(names = "covid",
limitedLabels = (1))+
theme(text = element_text(size=16), plot.title = element_text(hjust = 0.5))
plot2 <- my_data %>%
ggplot(aes(covid, spend,
colour = spend))+
geom_point()+
stat_smooth(method = lm, se = F, col = "red")+
labs(title = "visualising spend vs covid")+
scale_x_discrete("covid")+
theme(text = element_text(size=16), plot.title = element_text(hjust = 0.5))
plot2
ggarrange(plot1, plot2,
labels = c("A", "B"),
ncol = 2, nrow = 1,
heights = c(1,1))
plot2 <- my_data %>%
ggplot(aes(covid, spend,
colour = spend))+
geom_point()+
stat_smooth(method = lm, se = F, col = "red")+
labs(title = "visualising spend vs covid")+
scale_x_continuous(name = "covid",
limits = c(1, 2),
breaks = c(seq(1,2,1)))
theme(text = element_text(size=16), plot.title = element_text(hjust = 0.5))
plot2
ggarrange(plot1, plot2,
labels = c("A", "B"),
ncol = 2, nrow = 1,
heights = c(1,1))
plot1 <- my_data %>%
ggplot(aes(deprivation,spend,
colour = deprivation))+
geom_point(size = 3)+
ylim(cbind(5,35))+
stat_smooth(method = lm, se = F, col = "red")+
labs(title = "visualising spend vs derpivation")+
scale_x_continuous(name = "deprivation",
limits = c(10, 60),
breaks = c(seq(10,60,5)))+
scale_y_continuous(name = "spend",
limits = c(5,35),
breaks = c(seq(5,40,5)))+
theme(text = element_text(size=16), plot.title = element_text(hjust = 0.5))
plot1
plot2 <- my_data %>%
ggplot(aes(covid, spend,
colour = spend))+
geom_point()+
stat_smooth(method = lm, se = F, col = "red")+
labs(title = "visualising spend vs covid")+
scale_x_continuous(name = "covid",
limits = c(1, 2),
breaks = c(seq(1,2,1)))
theme(text = element_text(size=16), plot.title = element_text(hjust = 0.5))
plot2
plot2 <- my_data %>%
ggplot(aes(covid, spend,
colour = spend))+
geom_point()+
stat_smooth(method = lm, se = F, col = "red")+
labs(title = "visualising spend vs covid")+
scale_x_continuous(name = "covid",
limits = c(0, 2),
breaks = c(seq(0,2,1)))
theme(text = element_text(size=16), plot.title = element_text(hjust = 0.5))
plot2
# visualising spend vs deprivation using ggplot
my_data$covid <- as.numeric(my_data$covid)
summary(my_data$covid)
plot1 <- my_data %>%
ggplot(aes(deprivation,spend,
colour = deprivation))+
geom_point(size = 3)+
ylim(cbind(5,35))+
stat_smooth(method = lm, se = F, col = "red")+
labs(title = "visualising spend vs derpivation")+
scale_x_continuous(name = "deprivation",
limits = c(10, 60),
breaks = c(seq(10,60,5)))+
scale_y_continuous(name = "spend",
limits = c(5,35),
breaks = c(seq(5,40,5)))+
theme(text = element_text(size=16), plot.title = element_text(hjust = 0.5))
plot1
plot2 <- my_data %>%
ggplot(aes(covid, spend,
colour = spend))+
geom_point()+
stat_smooth(method = lm, se = F, col = "red")+
labs(title = "visualising spend vs covid")+
scale_x_continuous(name = "covid",
limits = c(0, 2),
breaks = c(seq(0,2,1)))
theme(text = element_text(size=16), plot.title = element_text(hjust = 0.5))
plot2
plot2 <- my_data %>%
ggplot(aes(covid, spend,
colour = spend))+
geom_point()+
stat_smooth(method = lm, se = F, col = "red")+
labs(title = "visualising spend vs covid")+
scale_x_continuous(name = "covid",
limits = c(1, 2),
breaks = c(seq(1,2,1)))
theme(text = element_text(size=16), plot.title = element_text(hjust = 0.5))
plot2
ggarrange(plot1, plot2,
labels = c("A", "B"),
ncol = 2, nrow = 1,
heights = c(1,1))
ggarrange(plot1, plot2,
labels = c("A", "B"),
ncol = 2, nrow = 1,
heights = c(1,1))
ggarrange(plot1, plot2,
labels = c("A", "B"),
ncol = 2, nrow = 1,
heights = c(1,1))
plot1 <- my_data %>%
ggplot(aes(deprivation,spend,
colour = deprivation))+
geom_point(size = 3)+
ylim(cbind(5,35))+
stat_smooth(method = lm, se = F, col = "red")+
labs(title = "visualising spend vs derpivation")+
scale_x_continuous(name = "deprivation",
limits = c(10, 30),
breaks = c(seq(10,30,5)))+
scale_y_continuous(name = "spend",
limits = c(5,35),
breaks = c(seq(5,40,5)))+
theme(text = element_text(size=16), plot.title = element_text(hjust = 0.5))
plot1
plot2 <- my_data %>%
ggplot(aes(covid, spend,
colour = spend))+
geom_point()+
stat_smooth(method = lm, se = F, col = "red")+
labs(title = "visualising spend vs covid")+
scale_x_continuous(name = "covid",
limits = c(1, 2),
breaks = c(seq(1,2,1)))
theme(text = element_text(size=16), plot.title = element_text(hjust = 0.5))
plot2
ggarrange(plot1, plot2,
labels = c("A", "B"),
ncol = 2, nrow = 1,
heights = c(1,1))
plot1
plot2 <- my_data %>%
ggplot(aes(covid, spend,
colour = spend))+
geom_point()+
stat_smooth(method = lm, se = F, col = "red")+
labs(title = "visualising spend vs covid")+
scale_x_continuous(name = "covid",
limits = c(1, 2),
breaks = c(seq(1,2,1)))
theme(text = element_text(size=12), plot.title = element_text(hjust = 0.5))
plot2
ggarrange(plot1, plot2,
labels = c("A", "B"),
ncol = 2, nrow = 1,
heights = c(1,1))
plot1 <- my_data %>%
ggplot(aes(deprivation,spend,
colour = deprivation))+
geom_point(size = 3)+
ylim(cbind(5,35))+
stat_smooth(method = lm, se = F, col = "red")+
labs(title = "visualising spend vs derpivation")+
theme(text = element_text(size=12), plot.title = element_text(hjust = 0.5))
plot1
plot2 <- my_data %>%
ggplot(aes(covid, spend,
colour = spend))+
geom_point()+
stat_smooth(method = lm, se = F, col = "red")+
labs(title = "visualising spend vs covid")+
scale_x_continuous(name = "covid",
limits = c(1, 2),
breaks = c(seq(1,2,1)))
theme(text = element_text(size=12), plot.title = element_text(hjust = 0.5))
plot2
ggarrange(plot1, plot2,
labels = c("A", "B"),
ncol = 2, nrow = 1,
heights = c(1,1))
summary(my_data$covid)
plot1 <- my_data %>%
ggplot(aes(deprivation,spend,
colour = deprivation))+
geom_point(size = 3)+
ylim(cbind(5,35))+
stat_smooth(method = lm, se = F, col = "red")+
labs(title = "spend vs derpivation")+
theme(text = element_text(size=12), plot.title = element_text(hjust = 0.5))
plot1
plot2 <- my_data %>%
ggplot(aes(covid, spend,
colour = spend))+
geom_point()+
stat_smooth(method = lm, se = F, col = "red")+
labs(title = "spend vs covid")+
scale_x_continuous(name = "covid",
limits = c(1, 2),
breaks = c(seq(1,2,1)))
theme(text = element_text(size=12), plot.title = element_text(hjust = 0.5))
plot2
ggarrange(plot1, plot2,
labels = c("A", "B"),
ncol = 2, nrow = 1,
heights = c(1,1))
##### Regression Analysis #####
# use library or require command to use the library
library("tidyverse")
library("corrplot")
set.seed(100)
# Import the data set
my_data <- read.csv("k2046544.csv")
view(my_data)
# summary of data
summary(my_data)
# converting covid attribute from integer to a factor data type
my_data$covid <- as.factor(my_data$covid)
summary(my_data)
# sample model - regression analysis of spend and deprivation
cor(my_data$spend, my_data$deprivation)
model <- lm(spend ~ deprivation, data = my_data)
model
plot(spend ~ deprivation+covid, data = my_data)
abline(model)
summary(model)
# Predicting spend using deprivation and covid variables by Multiple Linear Regression
plot(my_data$covid, my_data$deprivation, xlab = "covid", ylab = "deprivation")
mlr_model <- lm(spend ~ deprivation + covid, data = my_data)
mlr_model
# summary of mlr model output
summary(mlr_model)
# plotting mlr model
plot(mlr_model)
pred_spend = predict(mlr_model)
# plotting predicted spend how values are distributed
# Independence of observations
plot(pred_spend)
# residuals and its hist plot
# residuals should follow normal distribution (NORMALITY)
residspend = residuals(mlr_model)
hist(residspend)
# mean of predicted spend
mean(pred_spend)
# mean of actual spend
mean(my_data$spend)
# summary of predicted spend
summary(pred_spend)
# mean of actual spend
summary(my_data$spend)
##### Statistical Analysis####
# use library or require command to use the library
library("tidyverse")
library("corrplot")
set.seed(100)
# Import the data set
my_data <- read.csv("k2046544.csv")
view(my_data)
# summary of data
summary(my_data)
# converting covid attribute from integer to a factor data type
my_data$covid <- as.factor(my_data$covid)
summary(my_data)
##### correlation #####
# correlation between variables)
df1 <- my_data %>%
select(deprivation, spend, logspend)
x = cor(df1)
x
# correlation plot
corrplot(x, method = 'number', order = 'alphabet')
# correlation test
cor.test(my_data$deprivation, my_data$spend, method = "pearson")
cor.test(my_data$deprivation, my_data$logspend, method = "pearson")
#####Two sample T-test #####
#average spend during covid and pre-covid
my_data %>%
select(covid, spend) %>%
filter(covid == 0 | covid == 1) %>%
group_by(covid) %>%
summarise(Average_spend = mean(spend))
df2 <- my_data %>%
select(covid, spend)
#Two sample t-test no directionality is applied.
# performing t-test
t.test(spend ~ covid, data = df2, var.equal = TRUE, paired = FALSE)
# Two sample T-test between log spend and covid
t.test(logspend ~ covid, data = my_data, var.equal = TRUE, paired = FALSE)
#average spend during covid and pre-covid
my_data %>%
select(covid, spend) %>%
filter(covid == 0 | covid == 1) %>%
group_by(covid) %>%
summarise(Average_spend = mean(spend))
##### Regression Analysis #####
# use library or require command to use the library
library("tidyverse")
library("corrplot")
set.seed(100)
# Import the data set
my_data <- read.csv("k2046544.csv")
view(my_data)
# summary of data
summary(my_data)
# converting covid attribute from integer to a factor data type
my_data$covid <- as.factor(my_data$covid)
summary(my_data)
# sample model - regression analysis of spend and deprivation
cor(my_data$spend, my_data$deprivation)
model <- lm(spend ~ deprivation, data = my_data)
model
plot(spend ~ deprivation+covid, data = my_data)
summary(model)
# Predicting spend using deprivation and covid variables by Multiple Linear Regression
plot(my_data$covid, my_data$deprivation, xlab = "covid", ylab = "deprivation")
mlr_model <- lm(spend ~ deprivation + covid, data = my_data)
mlr_model
# summary of mlr model output
summary(mlr_model)
# plotting mlr model
plot(mlr_model)
pred_spend = predict(mlr_model)
# plotting predicted spend how values are distributed
# Independence of observations
plot(pred_spend)
# residuals and its hist plot
# residuals should follow normal distribution (NORMALITY)
residspend = residuals(mlr_model)
hist(residspend)
# summary actual spend
summary(my_data$spend)
# summary of predicted spend
summary(pred_spend)
##### Data Visualisation #####
##### Regression Analysis #####
# use library or require command to use the library
library("tidyverse")
library("corrplot")
library(ggpubr)
set.seed(100)
# Import the data set
my_data <- read.csv("k2046544.csv")
view(my_data)
# summary of data
summary(my_data)
# converting covid attribute from integer to a factor data type
my_data$covid <- as.factor(my_data$covid)
summary(my_data)
#Plotting spend using ggplot
my_data %>%
ggplot(aes(spend))+
geom_bar(size = 5)
# Jitter plot
my_data %>%
ggplot(aes(covid, spend,
colour = covid))+
geom_jitter(size = 3, alpha = 0.8)+
geom_smooth(method = lm, se = F)+
facet_wrap(~covid)+
theme_bw()
# Visualising covid vs spend
my_data %>%
ggplot(aes(covid, spend))+
geom_boxplot(size = 3, alpha = 0.8)+
geom_smooth(method = lm, se = F)+
labs(title = "visualisation of spend during pre-covid and lockdown ")+
scale_y_continuous(name = "spend",
limits = c(8,13),
breaks = c(seq(8,13,0.5)))+
theme(text = element_text(size=16), plot.title = element_text(hjust = 0.5))
# visualising spend vs deprivation using ggplot
my_data$covid <- as.numeric(my_data$covid)
summary(my_data$covid)
plot1 <- my_data %>%
ggplot(aes(deprivation,spend,
colour = deprivation))+
geom_point(size = 3)+
ylim(cbind(5,35))+
stat_smooth(method = lm, se = F, col = "red")+
labs(title = "spend vs deprivation")+
theme(text = element_text(size=12), plot.title = element_text(hjust = 0.5))
plot1
plot2 <- my_data %>%
ggplot(aes(covid, spend,
colour = spend))+
geom_point()+
stat_smooth(method = lm, se = F, col = "red")+
labs(title = "spend vs covid")+
scale_x_continuous(name = "covid",
limits = c(1, 2),
breaks = c(seq(1,2,1)))
theme(text = element_text(size=12), plot.title = element_text(hjust = 0.5))
plot2
ggarrange(plot1, plot2,
labels = c("A", "B"),
ncol = 2, nrow = 1,
heights = c(1,1))
ggarrange(plot1, plot2,
labels = c("A", "B"),
ncol = 2, nrow = 1,
heights = c(1,1))
ggarrange(plot1, plot2,
labels = c("A", "B"),
ncol = 2, nrow = 1,
heights = c(1,1))
plot1
plot2
theme(text = element_text(size=12), plot.title = element_text(hjust = 0.8))
plot2
plot2
ggarrange(plot1, plot2,
labels = c("A", "B"),
ncol = 2, nrow = 1,
heights = c(1,1))
ggarrange(plot1, plot2,
labels = c("A", "B"),
ncol = 1, nrow = 2,
heights = c(1,1))
ggarrange(plot1, plot2,
labels = c("A", "B"),
ncol = 2, nrow = 1,
heights = c(1,1))
ggarrange(plot1, plot2,
labels = c("A", "B"),
ncol = 2, nrow = 1,
heights = c(1,1))
